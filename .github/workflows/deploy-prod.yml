name: Deploy to PROD

on:
  # deploy manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "prod-aws"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      # Enter the Arc.codes part
      - name: Arc hydrate
        run: npx arc hydrate
      - name: Staging deploy
        run: npx arc deploy --production -v --prune
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
          LOKI_ENDPOINT: "https://logs-prod-039.grafana.net/loki/api/v1/push"
          LOKI_AUTH: ${{ secrets.LOKI_AUTH }}
          TRACES_ENDPOINT: "https://otlp-gateway-prod-eu-central-0.grafana.net/otlp/v1/traces"
          TRACES_AUTH: ${{ secrets.TRACES_AUTH }}
          RUNNING_ENV: "prod"
          COGNITO_CLIENT_ID: "203t0a306t5vkid4kdeto2hs2i"
          COGNITO_USER_POOL_ID: "eu-west-1_Fzpf4i9XY"
          CLOUDFLARE_TURNSTILE_SECRET: ${{ secrets.CLOUDFLARE_TURNSTILE_SECRET }}
      - name: Trigger deployment for Websocket API
        uses: nicholasarvelo/aws-cli-commands@v1.0.1
        with:
          args: apigatewayv2 create-deployment --api-id nh7fhbr5s1 --stage-name production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
